## Application Config
app.config.data.admin.name=master
app.config.data.schema.name.admin=brewcraft_master
app.config.data.schema.prefix.tenant=brewcraft_
app.config.data.migration.path.admin=db/master_migrations
app.config.data.migration.path.tenant=db/tenant_migrations

app.config.datasource.pool.size=1

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
# This property actually disabled the auto-commit
spring.datasource.hikari.auto-commit=false
# Leaving this property here in case spring chooses to use a different implementation than Hikari
spring.datasource.auto-commit=false

# Not a Spring property, named for consistency with other datasource properties.
spring.datasource.dbname=postgres

# Mapstruct
mapstruct.unmappedTargetPolicy=ERROR
mapstruct.verbose=true

# JPA
spring.jpa.database=POSTGRESQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

## Flyway
spring.flyway.enabled=false

# Aws Secrets Manager
aws.secretsmanager.region=${AWS_REGION}
aws.secretsmanager.url=${AWS_SECRETS_MANAGER_URL}
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}

# AWS Cognito Authorization Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI}

# AWS Cognito User Service
aws.cognito.region=${AWS_COGNITO_REGION}
aws.cognito.url=${AWS_COGNITO_URL}
aws.cognito.userPool.id=${AWS_COGNITO_USER_POOL_ID}
aws.cognito.userPool.url=${AWS_COGNITO_USER_POOL_URL}
# Set access key and secret key if different aws user is used for cognito service
# Otherwise it will pick either values set for aws.accessKeyId and aws.secretKey or
# credentials of aws iam role assigned for EC2
aws.cognito.accessKey=${AWS_COGNITO_ACCESS_KEY}
aws.cognito.secretKey=${AWS_COGNITO_SECRET_KEY}

# AWS Cognito Identity Pool
aws.cognito.identity.pool.id=${AWS_COGNITO_IDENTITY_POOL_ID}

# AWS S3
aws.s3.region=${AWS_S3_REGION}
aws.s3.accessKey=${AWS_S3_ACCESS_KEY}
aws.s3.accessSecret=${AWS_S3_ACCESS_SECRET}

# AWS IAM
aws.iam.region=${AWS_IAM_REGION}
aws.iam.accessKey=${AWS_IAM_ACCESS_KEY}
aws.iam.accessSecret=${AWS_IAM_ACCESS_SECRET}

# AWS Deployment
aws.deployment.accountId=${AWS_DEPLOYMENT_ACCOUNT_ID}
aws.deployment.parition=${AWS_DEPLOYMENT_PARTITION}
aws.deployment.region=${AWS_DEPLOYMENT_REGION}

# App IaaS
# Because ID Tokens expire in 1 hour
app.iaas.credentials.expiry.duration=3600 

# App ObjectStore
app.object-store.temp.path.hours=24
app.object-store.bucket.name=root-bucket

# API Doc Generation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packagesToScan=io.company.brewcraft.controller
springdoc.swagger-ui.operationsSorter=alpha

logging.level.io.company.brewcraft=DEBUG