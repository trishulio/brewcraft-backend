# POSTGRES_DB
POSTGRES_PASSWORD=<PG_PASSWD_HERE>
POSTGRES_USER=<PG_USER_HERE>
POSTGRES_DB=<PG_DB_HERE>
POSTGRES_PORT=<POSTGRES_PORT_HERE>
POSTGRES_HOST=<POSTGRES_HOST_HERE>
BREWCRAFT_MASTER_USER=<BREWCRAFT_MASTER_USER_HERE>
BREWCRAFT_MASTER_USER_PASSWORD=<BREWCRAFT_MASTER_USER_PASSWORD_HERE>

# PG_ADMIN
PGADMIN_DEFAULT_EMAIL=<PGADMIN_EMAIL>
PGADMIN_DEFAULT_PASSWORD=<PGADMIN_PASSWD>

# LocalStack
LS_WEB_UI=<LOCALSTACK_WEB_PORT>

# AWS Environment
AWS_REGION=<AWS_REGION_HERE>
AWS_HOSTNAME_EXTERNAL=<AWS_HOSTNAME_EXTERNAL_HERE>
AWS_SECRETS_MANAGER_URL=<AWS_SECRETS_MANAGER_URL_HERE>

# AWS_SECRETS_MANAGER
AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY_ID>
AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>

# AWS Cognito User Pool
JWT_ISSUER_URI=<PUT_AWS_COGNITO_USER_POOL_URL>
JWK_SET_URI=<PUT_AWS_COGNITO_USER_POOL_JWK_URI>

# AWS Cognito User Service
AWS_COGNITO_REGION=<PUT_AWS_COGNITO_REGION>
AWS_COGNITO_URL=<PUT_AWS_COGNITO_URL>
AWS_COGNITO_USER_POOL_ID=<PUT_AWS_COGNITO_USER_POOL_ID>
# Set access key and secret key if different aws user is used for cognito service
# Otherwise it will pick either values set for aws.accessKeyId and aws.secretKey or
# credentials of aws iam role assigned for EC2
AWS_COGNITO_ACCESS_KEY = <PUT_AWS_COGNITO_ACCESS_KEY>
AWS_COGNITO_SECRET_KEY = <PUT_AWS_COGNITO_SECRET_KEY>

# Maven
MUTATION_COVERAGE=<PUT_TRUE_TO_GENERATE_MUTATION_COVERAGE>
CODE_COVERAGE=<PUT_TRUE_TO_RUN_TESTS>