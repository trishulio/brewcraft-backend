env: dev
replicaCount: 2

image:
  repository: docker.io/library
  pullPolicy: IfNotPresent

imagePullSecrets: []

resources:
  limits:
    cpu: 500m
    memory: 2G
  requests:
    cpu: 250m
    memory: 1.5G

app:
  services:
    db:
      schema: postgresql
      databaseName: postgres
      host: test-postgresql-hl # TODO: Inject release name automatically
      port: "5432"
      name: postgres
      username: khj9MARXb0rWQAMLsAmQkzwGku3Q9S0pbuZ62cCOy40= # brewcraft_admin
      password: IwyygsRC2Cg8N5uyyXU5ATek3X2H48xKvDT9dksn6xM= # password
    authentication:
      oauth:
        jwtIssuerUri: https://cognito-idp.us-east-2.amazonaws.com/us-east-2_oM5hcvZyn
        jwkSetUri: https://cognito-idp.us-east-2.amazonaws.com/us-east-2_oM5hcvZyn/.well-known/jwks.json
    secretsManager:
      awsSecretsManager:
        accessKeyId: qEtcx5uxO0MmicTT7srhN3AAX6Yjt78FEXd/oAQs954=
        accessSecretKey: qEtcx5uxO0MmicTT7srhN3AAX6Yjt78FEXd/oAQs954=
        region: us-west-1
        url: http://test-localstack:4566 # TODO: Inject release name automatically

  networking:
    port:
      container: "8080"
      service: "8080"
  svc:
    type: NodePort
    nodePort: "31000"

multitenancy:
  provisioning:
    authentication:
      awsCognitoUserPool:
        id: us-east-2_oM5hcvZyn
        region: us-east-2
        url: https://cognito-idp.us-east-2.amazonaws.com
        accessKeyId: YVdzqC2oS/CqDFMnWwEGTsb8HT2wl0vGzbo32F0+1mkorAG6ARgqPVu27JLG8/k0 # AKIA3MFYYJTRXM5XJX3D
        accessSecretKey: Mtz9wf4GN3Tx4fKILAuppsMRB7oASYxSv3OHHoGtt3OIcCwOFjm70mo4KuhQ47QHBZEV4b03sSbaPxZIv4gGtw== # YgGHLhVmUUO2xwO8FRPpC8edhYQu2PNqQUvpv5cw
      awsCognitoIdentityPool:
        id: us-east-2:de2f885e-70ce-4e33-8111-342a12ea1cfc
        userPoolUrl: cognito-idp.us-east-2.amazonaws.com/us-east-2_oM5hcvZyn
    objectStore:
      awsS3:
        region: us-east-2
        accessKeyId: YVdzqC2oS/CqDFMnWwEGTsb8HT2wl0vGzbo32F0+1mkorAG6ARgqPVu27JLG8/k0 # AKIA3MFYYJTRXM5XJX3D
        accessSecretKey: Mtz9wf4GN3Tx4fKILAuppsMRB7oASYxSv3OHHoGtt3OIcCwOFjm70mo4KuhQ47QHBZEV4b03sSbaPxZIv4gGtw== # YgGHLhVmUUO2xwO8FRPpC8edhYQu2PNqQUvpv5cw
    accessManagement:
      awsIam:
        accessKeyId: YVdzqC2oS/CqDFMnWwEGTsb8HT2wl0vGzbo32F0+1mkorAG6ARgqPVu27JLG8/k0 # AKIA3MFYYJTRXM5XJX3D
        accessSecretKey: Mtz9wf4GN3Tx4fKILAuppsMRB7oASYxSv3OHHoGtt3OIcCwOFjm70mo4KuhQ47QHBZEV4b03sSbaPxZIv4gGtw== # YgGHLhVmUUO2xwO8FRPpC8edhYQu2PNqQUvpv5cw

serviceAccount:
  id: 782071516387
  partition: aws

# Dev Dependencies

persistence:
  enabled: false

dependencies:
  postgresql:
    enabled: true
  pgadmin4:
    enabled: true
  localstack:
    enabled: true

postgresql:
  auth:
    username: postgres
    password: postgres
    database: postgres
  primary:
    persistence:
      enabled: false
    extraEnvVars:
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: postgres
      - name: BREWCRAFT_ADMIN_USER
        value: brewcraft_admin
      - name: BREWCRAFT_ADMIN_USER_PASSWORD
        value: password
    initdb:
      scripts:
        init.sh: |
          #!/bin/bash
          set -e
          psql -d postgres -U postgres -c "CREATE USER $BREWCRAFT_ADMIN_USER WITH PASSWORD '$BREWCRAFT_ADMIN_USER_PASSWORD';"
          psql -d postgres -U postgres -c "GRANT CONNECT ON DATABASE $POSTGRES_DB TO $BREWCRAFT_ADMIN_USER WITH GRANT OPTION;"
          psql -d postgres -U postgres -c "GRANT CREATE ON DATABASE $POSTGRES_DB TO $BREWCRAFT_ADMIN_USER WITH GRANT OPTION;"
          psql -d postgres -U postgres -c "ALTER ROLE $BREWCRAFT_ADMIN_USER WITH CREATEROLE;"

pgadmin4:
  env:
    email: admin@pgadmin.com
    password: password

localstack:
  startServices: secretsmanager